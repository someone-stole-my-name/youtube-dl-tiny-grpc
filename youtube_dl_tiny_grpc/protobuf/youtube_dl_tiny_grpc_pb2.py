# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: youtube_dl_tiny_grpc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1ayoutube_dl_tiny_grpc.proto\"\xb7\t\n\x13\x45xtractInfoResponse\x12\n\n\x02id\x18\x01 \x01(\t\x12\r\n\x05title\x18\x02 \x01(\t\x12-\n\x07\x66ormats\x18\x03 \x03(\x0b\x32\x1c.ExtractInfoResponse.Formats\x12\x33\n\nthumbnails\x18\x04 \x03(\x0b\x32\x1f.ExtractInfoResponse.Thumbnails\x12\x13\n\x0b\x64\x65scription\x18\x05 \x01(\t\x12\x13\n\x0bupload_date\x18\x06 \x01(\t\x12\x10\n\x08uploader\x18\x07 \x01(\t\x12\x13\n\x0buploader_id\x18\x08 \x01(\t\x12\x14\n\x0cuploader_url\x18\t \x01(\t\x12\x12\n\nchannel_id\x18\n \x01(\t\x12\x13\n\x0b\x63hannel_url\x18\x0b \x01(\t\x12\x10\n\x08\x64uration\x18\x0c \x01(\r\x12\x12\n\nview_count\x18\r \x01(\r\x12\x12\n\ncategories\x18\x11 \x03(\t\x12\x0c\n\x04tags\x18\x12 \x03(\t\x12\x0f\n\x07\x63hannel\x18\x16 \x01(\t\x12\x11\n\textractor\x18\x17 \x01(\t\x12\x11\n\tthumbnail\x18\x1c \x01(\t\x12\x12\n\ndisplay_id\x18\x1d \x01(\t\x12\x0e\n\x06\x66ormat\x18  \x01(\t\x12\x11\n\tformat_id\x18! \x01(\t\x12\r\n\x05width\x18\" \x01(\r\x12\x0e\n\x06height\x18# \x01(\r\x12\x12\n\nresolution\x18$ \x01(\r\x12\x0b\n\x03\x66ps\x18% \x01(\r\x12\x0e\n\x06vcodec\x18& \x01(\t\x12\x0b\n\x03vbr\x18\' \x01(\x01\x12\x17\n\x0fstretched_ratio\x18( \x01(\r\x12\x0e\n\x06\x61\x63odec\x18) \x01(\t\x12\x0b\n\x03\x61\x62r\x18* \x01(\x01\x12\x0b\n\x03\x65xt\x18+ \x01(\t\x12\x37\n\x11requested_formats\x18, \x03(\x0b\x32\x1c.ExtractInfoResponse.Formats\x12\x0b\n\x03\x61sr\x18- \x01(\r\x12\x10\n\x08\x66ilesize\x18. \x01(\r\x12\x13\n\x0b\x66ormat_note\x18/ \x01(\t\x12\x0f\n\x07quality\x18\x30 \x01(\r\x12\x0b\n\x03tbr\x18\x31 \x01(\x01\x12\x0b\n\x03url\x18\x32 \x01(\t\x12\x11\n\tcontainer\x18\x33 \x01(\t\x12\x10\n\x08protocol\x18\x34 \x01(\t\x1a\xa3\x02\n\x07\x46ormats\x12\x0b\n\x03\x61sr\x18\x01 \x01(\r\x12\x10\n\x08\x66ilesize\x18\x02 \x01(\r\x12\x11\n\tformat_id\x18\x03 \x01(\t\x12\x13\n\x0b\x66ormat_note\x18\x04 \x01(\t\x12\x0b\n\x03\x66ps\x18\x05 \x01(\r\x12\x0e\n\x06height\x18\x06 \x01(\r\x12\x0f\n\x07quality\x18\x07 \x01(\r\x12\x0b\n\x03tbr\x18\x08 \x01(\x01\x12\x0b\n\x03url\x18\t \x01(\t\x12\r\n\x05width\x18\n \x01(\r\x12\x0b\n\x03\x65xt\x18\x0b \x01(\t\x12\x0e\n\x06vcodec\x18\x0c \x01(\t\x12\x0e\n\x06\x61\x63odec\x18\r \x01(\t\x12\x0b\n\x03\x61\x62r\x18\x0e \x01(\x01\x12\x11\n\tcontainer\x18\x10 \x01(\t\x12\x0e\n\x06\x66ormat\x18\x11 \x01(\t\x12\x10\n\x08protocol\x18\x12 \x01(\t\x12\x0b\n\x03vbr\x18\x14 \x01(\x01\x1aX\n\nThumbnails\x12\x0e\n\x06height\x18\x01 \x01(\r\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\r\n\x05width\x18\x03 \x01(\r\x12\x12\n\nresolution\x18\x04 \x01(\t\x12\n\n\x02id\x18\x05 \x01(\t\"7\n\x10YoutubeDLOptions\x12\x0e\n\x06\x66ormat\x18\x01 \x01(\t\x12\x13\n\x0bplaylistend\x18\x02 \x01(\r\"E\n\x12\x45xtractInfoRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\"\n\x07options\x18\x02 \x01(\x0b\x32\x11.YoutubeDLOptions2I\n\tYoutubeDL\x12<\n\x0b\x45xtractInfo\x12\x13.ExtractInfoRequest\x1a\x14.ExtractInfoResponse\"\x00\x30\x01\x62\x06proto3')



_EXTRACTINFORESPONSE = DESCRIPTOR.message_types_by_name['ExtractInfoResponse']
_EXTRACTINFORESPONSE_FORMATS = _EXTRACTINFORESPONSE.nested_types_by_name['Formats']
_EXTRACTINFORESPONSE_THUMBNAILS = _EXTRACTINFORESPONSE.nested_types_by_name['Thumbnails']
_YOUTUBEDLOPTIONS = DESCRIPTOR.message_types_by_name['YoutubeDLOptions']
_EXTRACTINFOREQUEST = DESCRIPTOR.message_types_by_name['ExtractInfoRequest']
ExtractInfoResponse = _reflection.GeneratedProtocolMessageType('ExtractInfoResponse', (_message.Message,), {

  'Formats' : _reflection.GeneratedProtocolMessageType('Formats', (_message.Message,), {
    'DESCRIPTOR' : _EXTRACTINFORESPONSE_FORMATS,
    '__module__' : 'youtube_dl_tiny_grpc_pb2'
    # @@protoc_insertion_point(class_scope:ExtractInfoResponse.Formats)
    })
  ,

  'Thumbnails' : _reflection.GeneratedProtocolMessageType('Thumbnails', (_message.Message,), {
    'DESCRIPTOR' : _EXTRACTINFORESPONSE_THUMBNAILS,
    '__module__' : 'youtube_dl_tiny_grpc_pb2'
    # @@protoc_insertion_point(class_scope:ExtractInfoResponse.Thumbnails)
    })
  ,
  'DESCRIPTOR' : _EXTRACTINFORESPONSE,
  '__module__' : 'youtube_dl_tiny_grpc_pb2'
  # @@protoc_insertion_point(class_scope:ExtractInfoResponse)
  })
_sym_db.RegisterMessage(ExtractInfoResponse)
_sym_db.RegisterMessage(ExtractInfoResponse.Formats)
_sym_db.RegisterMessage(ExtractInfoResponse.Thumbnails)

YoutubeDLOptions = _reflection.GeneratedProtocolMessageType('YoutubeDLOptions', (_message.Message,), {
  'DESCRIPTOR' : _YOUTUBEDLOPTIONS,
  '__module__' : 'youtube_dl_tiny_grpc_pb2'
  # @@protoc_insertion_point(class_scope:YoutubeDLOptions)
  })
_sym_db.RegisterMessage(YoutubeDLOptions)

ExtractInfoRequest = _reflection.GeneratedProtocolMessageType('ExtractInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _EXTRACTINFOREQUEST,
  '__module__' : 'youtube_dl_tiny_grpc_pb2'
  # @@protoc_insertion_point(class_scope:ExtractInfoRequest)
  })
_sym_db.RegisterMessage(ExtractInfoRequest)

_YOUTUBEDL = DESCRIPTOR.services_by_name['YoutubeDL']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _EXTRACTINFORESPONSE._serialized_start=31
  _EXTRACTINFORESPONSE._serialized_end=1238
  _EXTRACTINFORESPONSE_FORMATS._serialized_start=857
  _EXTRACTINFORESPONSE_FORMATS._serialized_end=1148
  _EXTRACTINFORESPONSE_THUMBNAILS._serialized_start=1150
  _EXTRACTINFORESPONSE_THUMBNAILS._serialized_end=1238
  _YOUTUBEDLOPTIONS._serialized_start=1240
  _YOUTUBEDLOPTIONS._serialized_end=1295
  _EXTRACTINFOREQUEST._serialized_start=1297
  _EXTRACTINFOREQUEST._serialized_end=1366
  _YOUTUBEDL._serialized_start=1368
  _YOUTUBEDL._serialized_end=1441
# @@protoc_insertion_point(module_scope)
